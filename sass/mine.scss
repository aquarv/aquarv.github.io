/* my modification */
@use "sass:meta";
@use "sass:list";

@use "functions";
@use "colors";
@use "colors-syntax";

$document: true !default; //Content-box & Responsive typography
$typography: true !default; //a, headings, p, ul, blockquote
$sectioning: true !default; //responsive Container, header, main, footer
$nav: true !default; //Horizontal Navigation at top of page
$embedded: true !default; //Embedded content, iframe, video, images, etc.
$table: true !default; //table specific elements
$code: true !default; //codeblocks, code, pre, kbd
$hr: true !default; //Horizontal Rule
$scroller: true !default; //Horizontal scroller (<figure>)
$button: true !default; //Form elements (button)
$form: true !default; //Form elements (non-button)
$top: true !default; //back to top button using CSS
$search: true !default; //search feature
$blocks: true !default; //css classes for block formatting, eg: recent posts, table of contents, series navigation
$series: true !default; //series navigation list
$modifiers: true !default; //tiny modifier classes for sizing and spacing
$imgswap: true !default; //Image Swap on hover/click
$misc: false !default;
$grid: true !default; //Infinity Grid, column based layouts.
$syntax: true !default; //syntax highlighting for code blocks

@mixin root {
  // color-scheme: var(--cs);

  // Spacings
  --s1: .5rem;
  --s2: 1rem;
  --rc: .5rem; //radius corners

  // Borders
  --br: 0.25rem; //border radius
  --bw: 0.0625rem; //border width
  --ow: 0.1875rem; //outline width

  --fs: 1rem; //font-size
  --lh: 1.5; //line-height
  --lhh: 1.2; //line-height headers
  --fw: 400; //font-weight
  --fh: 700; //font-weight h1-h6

  // Responsive typography
  @if $enable-responsive-typography {
    @if map-get($breakpoints, "sm") {
      @media (min-width: map-get($breakpoints, "sm")) {
        --fs: 1rem;
      }
    }

    @if map-get($breakpoints, "md") {
      @media (min-width: map-get($breakpoints, "md")) {
        --fs: 1.04rem;
      }
    }

    @if map-get($breakpoints, "lg") {
      @media (min-width: map-get($breakpoints, "lg")) {
        --fs: 1.08rem;
      }
    }

    @if map-get($breakpoints, "xl") {
      @media (min-width: map-get($breakpoints, "xl")) {
        --fs: 1.12rem;
      }
    }
  }
}

// Highlighted text
// mark {
// background-color: var(--c4);
// color: var(--c1);
// vertical-align: baseline;
// padding: .1rem .4rem;
// }
// blockquote {
// margin-left: 0;
// padding: .5rem 0 .5rem 1.5rem;
// border-left: .25rem solid var(--c3);
// }
// blockquote > :last-child {
// margin-bottom: 0;
// }
// small {
// font-size: .875rem;
// }

.pre-head {
  position: block;
  // height: 24px;
  // vertical-align: middle;
}

.copy::before {
  content: "\1F5D0";
  // content: "\f00c";
  justify-self: center;
}

//copy icons for code blocks
.copy {
  mask: functions.icon(copy, "%23000", 2, "none", true);
  // background: var(--f2)
}

.copy.yes {
  mask: functions.icon(copy-yes, "%23000", 2, "none", true);
  // background: var(--cg)
}

.copy.err {
  mask: functions.icon(copy-err, "%23000", 2, "none", true);
  // background: var(--cr)
}

.copy-btn {
  right: 0.5rem;
  position: relative;
  text-align: right;
}

pre {
  position: relative;
  padding: 2rem .5rem .3rem;
  border-radius: 5px;
  display: block;
  overflow-x: auto;
  -ms-overflow-style: scrollbar;
  white-space: pre;

  >code {
    display: block;
    background: transparent;
  }
}

// add header to code blocks
pre code[data-lang]::before {
  content: attr(data-lang);
  padding: .15rem;
  display: block;
  background-color: var(--bs-body-bg);
  color: var(--bs-body-color);
  border: 1px solid var(--bs-body-color);
  width: 100%;
  border-top-left-radius: 5px 5px;
  border-top-right-radius: 5px 5px;
  position: absolute;
  top: 0;
  left: 0;
  padding-left: 1rem;
  text-transform: uppercase;
}

// Table Override, this is used for numbered code blocks linenos and hl_lines
code {
  table {
    font-size: .8rem;
    margin: 0;
    // Highlighted text
    color: var(--h1);

    mark {
      display: block;
      color: unset;
      padding: 0;
      background-color: var(--h0);
      filter: brightness(var(--ha));
    }
  }

  td,
  th,
  tr {
    padding: 0;
    border-bottom: none;
  }

  tbody td:first-child {
    text-align: center;
    user-select: none;
    min-width: 60px;
  }

  tbody tr:nth-child(even),
  thead tr {
    background-color: unset;
  }
}

// code copy button
.cc {
  cursor: pointer;
  z-index: 1;
  position: absolute;
  top: 0.3rem;
  right: 0.5rem;
}

.cc:hover {
  background: var(--a3);
  opacity: 1;
}

.sticky {
  position: sticky;
  // top: var(--s2);
  top: 1rem;
}

.block {
  max-width: 30rem;
  margin: 1rem auto;
}

.blockdiv {
  border-radius: var(--br);
  border-top: 5px solid var(--a1);
  background-color: var(--c2);
  margin-top: 1rem;
  padding: .2rem 0 1rem 1rem;
  max-height: 100vh;
  overflow: auto;
  color: var(--bs-btt-color);
  // word-wrap: break-word;
  background-clip: border-box;
  // border: var(--bs-body-border-width) solid var(--bs-body-border-color);
  box-sizing: border-box;
  border-radius: 5px;
  border: none;
  box-shadow: inset 1px 1px rgba(255, 255, 255, .2),
    inset -1px -1px rgba(255, 255, 255, .1),
    1px 3px 24px -1px rgba(0, 0, 0, .15);
  background-color: transparent;
  background-image: linear-gradient(125deg, rgba(255, 255, 255, .3), rgba(255, 255, 255, .2) 70%);
  -webkit-backdrop-filter: blur(5px);
  backdrop-filter: blur(5px);
  --bs-secondary-rgb: transparent;

  a {
    color: var(--f1);

    &:hover {
      color: var(--a2);
    }
  }

  ol {
    margin: 0;
  }

  .scur {
    //series current page
    font-weight: var(--fh);
    color: var(--a1);
  }
}

.sblock {
  @if $series {
    details:not([open])+.hidden_li {
      // Series: Hides next .hidden_li element when details is closed
      height: 0;
      visibility: hidden;
      overflow: hidden;
    }

    summary {
      // Series: aligns item with the rest of the list, and color differently.
      margin-left: -1em;
      margin-bottom: .2rem;
      color: var(--c4);
    }

  }

  ol,
  ul {
    font-size: 1em;
  }

  width: 15rem;
  max-width: 15rem;
  margin-left: 1rem;
  display: none; //hide in mobile view
}

.desc {
  display: none; //hide in mobile view
}

// mobile first is min-width for desktop instead of max-width for mobile
@media (min-width: 768px) {

  .sblock,
  .desc {
    display: unset; //show in desktop view
  }

  .block {
    display: none; //hide in desktop view, TODO: depending on what blocks get used for, this could be a problem in the future, should be fine for now.
  }

}

// .svgs {
//     width: var(--fs);
//     height: var(--fs);
//     display: inline-block;
//     //overflow: hidden;
//     text-align: center;
//     vertical-align: middle;
// }

/* Back to top button */
.back-to-top {
  --bs-btt-border-width: var(--bs-border-width);
  --bs-btt-border-radius: var(--bs-border-radius);
  --bs-btt-color: var(--bs-body-color);
  --bs-btt-bg: rgba(255, 255, 255, 0.4);
  --bs-btt-border-color: rgba(255, 255, 255, 0.4);
  --bs-btt-hover-color: #000;
  --bs-btt-hover-bg: rgba(255, 255, 255, 0.49);
  --bs-btt-hover-border-color: rgba(255, 255, 255, 0.46);
  --bs-btt-active-color: #000;
  --bs-btt-active-bg: rgba(255, 255, 255, 0.52);
  --bs-btt-active-border-color: rgba(255, 255, 255, 0.46);
  --bs-btt-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);
  color: var(--bs-btt-color);
  word-wrap: break-word;
  background-color: var(--bs-btt-bg);
  background-clip: border-box;
  border: var(--bs-btt-border-width) solid var(--bs-btt-border-color);
  box-sizing: border-box;
  border-radius: 5px;
  position: fixed;
  bottom: 10px;
  right: 20px;
  z-index: 0;
  /* padding: 10 0px; */
  height: 32px;
  width: 32px;
  /* color: $b2t-color; */
  /* cursor: pointer; */
  /* transition-property: bottom; */

  &.back-to-top-on {
    bottom: 10;
  }
}

.btt-box {
  width: 30px;
  height: 30px;
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;
  vertical-align: middle;
}

/* Article preview split ratio */
.g-0,
.gx-0 {
  --bs-gutter-x: 0
}

.g-0,
.gy-0 {
  --bs-gutter-y: 0
}

.g-1,
.gx-1 {
  --bs-gutter-x: 0.25rem
}

.g-1,
.gy-1 {
  --bs-gutter-y: 0.25rem
}

.g-2,
.gx-2 {
  --bs-gutter-x: 0.5rem
}

.g-2,
.gy-2 {
  --bs-gutter-y: 0.5rem
}

.g-3,
.gx-3 {
  --bs-gutter-x: 1rem
}

.g-3,
.gy-3 {
  --bs-gutter-y: 1rem
}

.g-4,
.gx-4 {
  --bs-gutter-x: 1.5rem
}

.g-4,
.gy-4 {
  --bs-gutter-y: 1.5rem
}

.g-5,
.gx-5 {
  --bs-gutter-x: 3rem
}

.g-5,
.gy-5 {
  --bs-gutter-y: 3rem
}

/* card gap */
.card {
  margin-top: 0.5rem;
  margin-bottom: 0.5rem;
}